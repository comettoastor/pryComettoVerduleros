<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>